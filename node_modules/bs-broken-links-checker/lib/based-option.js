'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _base = require('./base');

var _base2 = _interopRequireDefault(_base);

/**
 * @exports
 * @class BasedOption
 * @desc Implements options set and get logic
 */

var BasedOption = (function (_Base) {
  _inherits(BasedOption, _Base);

  function BasedOption() {
    _classCallCheck(this, BasedOption);

    _get(Object.getPrototypeOf(BasedOption.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(BasedOption, [{
    key: 'setOption',

    /**
     * Sets value to options model for given option field name
     * @param {Object} options      â€” configuration object
     * @param {String} name         - name of option field
     * @param {*}      defaultValue - option default value
     * @returns {BasedOption}
     * @public
     */
    value: function setOption(options, name, defaultValue) {
      /**
       * Options hash
       * @type {Object}
       */
      this._options = this._options || {};
      this._options[name] = options[name] || defaultValue;
      if (!_lodash2['default'].isFunction(this._options[name]) && !_lodash2['default'].isObject(this._options[name])) {
        this._logger.info('Set option [%s] => %s', name, this._options[name]);
      }
      return this;
    }

    /**
     * Returns option value by given option name
     * @param {String} name of option
     * @returns {*}
     * @public
     */
  }, {
    key: 'getOption',
    value: function getOption(name) {
      return this._options[name];
    }
  }]);

  return BasedOption;
})(_base2['default']);

exports['default'] = BasedOption;
module.exports = exports['default'];